name: C++ Sonar Scanner workflow

on:
  workflow_call:
    inputs:
      build-wrapper-out-dir:
        description: 'Build wrapper output directory'
        required: false
        default: 'bw_output'
    secrets:
      github-token:
        required: true
      sonarcloud-token:
        required: true

jobs:
  sonar-scanner-cpp:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/usdot-fhwa-stol/carma-builds:latest
    steps:
      - name: Install curl, zip, git, gcovr
        run: |
          apt update
          export DEBIAN_FRONTEND=noninteractive
          apt-get install -y curl zip git gcovr
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name:  Install sonar-scanner and build-wrapper
        uses: sonarsource/sonarcloud-github-c-cpp@v1
      - name: Run build-wrapper
        # here goes your compilation wrapped with build-wrapper; See https://docs.sonarcloud.io/advanced-setup/languages/c-c-objective-c/#analysis-steps-using-build-wrapper for more information
        run: |
          # build-preparation steps
          if [ -f install_dependencies.sh ]; then
            ./install_dependencies.sh
          fi
          # set up common Sonar scan properties
          echo "sonar.cfamily.cache.enabled=false" >> sonar-project.properties
          echo "sonar.sources=src" >> sonar-project.properties
          # Note: For C++ setting this field does not cause test analysis to occur. It only allows the test source code to be evaluated.
          echo "sonar.tests=test" >> sonar-project.properties
          echo "sonar.coverageReportPaths=build/coverage_sonar.xml" >> sonar-project.properties

          build-wrapper-linux-x86-64 --out-dir ${{ inputs.build-wrapper-out-dir }} bash ./build.sh -c
          # check for coverage in expected location
          ls -al build/coverage_sonar.xml
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
          SONAR_TOKEN: ${{ secrets.sonarcloud-token }}
        run: sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ inputs.build-wrapper-out-dir }}" #Consult https://docs.sonarcloud.io/advanced-setup/ci-based-analysis/sonarscanner-cli/ for more information and options

name: C++ Module Build workflow

on:
  workflow_call:
    inputs:
      build:
        description: 'Run a build'
        required: true
        type: boolean
      build-architecture:
        description: 'Build architecture, defaults x64, see the carma-builds project for supported architectures'
        required: false
        type: string
        default: 'x64'
      build-image-tag:
        description: 'Build image tag for ghcr.io/usdot-fhwa-stol/carma-builds'
        required: false
        type: string
        default: 'focal'
      bucket-codename:
        description: 'Bucket codename, defaults to null, which will determine the codename using determine_codename.sh'
        required: false
        type: string
        default: ''
      working-folder:
        description: 'Working folder to build in'
        type: string
        required: false
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  image-name-get:
    if: ${{ inputs.build }}
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set_image.outputs.image }}
    steps:
      - id: set_image
        run: |
          BUILD_ARCHITECTURE="-${{ inputs.build-architecture }}"
          echo "image=carma-builds${BUILD_ARCHITECTURE}:${{ inputs.build-image-tag }}" >> $GITHUB_OUTPUT
  git-revision-info-get:
    if: ${{ inputs.build }}
    uses: usdot-fhwa-stol/actions/.github/workflows/git-revision-info.yml@fix-node-deprecation-warnings
  cpp-module-build:
    if: ${{ inputs.build }}
    runs-on: ubuntu-latest
    needs:
      - image-name-get
      - git-revision-info-get
    container:
      image: ghcr.io/usdot-fhwa-stol/${{ needs.image-name-get.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          if [ -f install_dependencies.sh ]; then
            ./install_dependencies.sh
          fi # check file existence
      - name: Build
        uses: usdot-fhwa-stol/actions/build-cpp-library@main
        with:
          package-version-suffix: ${{ needs.git-revision-info-get.outputs.git-revision-info }}
          working-folder: ${{ inputs.working-folder }}
      - name: Upload deb artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deb-packages-${{ inputs.build-architecture }}-${{ inputs.build-image-tag }}
          path: |
            build*/_packages/*.deb
            ${{ inputs.working-folder }}/build*/_packages/*.deb

  deb-s3-upload:
    if: ${{ inputs.build }}
    runs-on: ubuntu-latest
    needs:
      - cpp-module-build
    container:
      image: ghcr.io/usdot-fhwa-stol/actions-deb-s3:main
    steps:
      - name: Publish deb artifacts
        uses: usdot-fhwa-stol/actions/deb-s3-upload@main
        with:
          artifact-name: deb-packages-${{ inputs.build-architecture }}-${{ inputs.build-image-tag }}
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          bucket-codename: ${{ inputs.bucket-codename }}

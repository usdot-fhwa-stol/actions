name: Docker Build

on:
  workflow_call:
    secrets:
      GH_PAT:
        description: "GITHUB Token for accessing private stol github repositories" 
        required: false
      ACCESS_ID:
        description: "Access ID for accessing astuff s3 apt repository"
        required: false
      SECRET_KEY:
        description: "Secret Key for accessing astuff s3 apt repository"
        required: false
    inputs:
      context:
        description: "Build's context is the set of files located in the specified PATH or URL (default .)"
        type: "string"
        default: .
      file:
        description: "Optional: Path to Dockerfile"
        type: "string"
        required: false
      runner:
        description: "GitHub runner for workflow (Default: ubuntu-latest)"
        type: "string"
        default: "ubuntu-latest"
      tag_name_suffix:
        description: "Optional: Custom docker image tag name suffix to be appended, defaults to empty string"
        type: "string"
        required: false
      replace_suffix:
        description: "Optional: True if last part of the docker_tag needs to be replaced with given tag_name_suffix"
        type: "boolean"
        required: false

jobs:
  docker:
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Determine Docker organization and tag
        id: docker-org-and-tag
        uses: usdot-fhwa-stol/actions/docker-org-and-tag@main
        with:
          docker_tag_suffix: ${{inputs.tag_name_suffix}}
          replace_suffix: ${{inputs.replace_suffix}}
      - name: Determine base branch
        id: determine-base-branch
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            echo git_branch="$GITHUB_BASE_REF" >> $GITHUB_OUTPUT
          else
            echo git_branch="$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
          fi
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          build-args: |
            TOKEN=${{ secrets.GH_PAT }}
            DOCKER_ORG=${{ steps.docker-org-and-tag.outputs.docker_organization }}
            DOCKER_TAG=${{ steps.docker-org-and-tag.outputs.docker_image_tag }}
            GIT_BRANCH=${{ steps.determine-base-branch.outputs.git_branch}}
            ACCESS_ID=${{ secrets.ACCESS_ID}}
            SECRET_KEY=${{ secrets.SECRET_KEY}}

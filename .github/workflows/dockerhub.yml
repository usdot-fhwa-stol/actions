name: Docker Hub Build

on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        description: Credentials for pushing images to dockerhub
        required: true
      DOCKERHUB_TOKEN:
        description: Credentials for pushing images to dockerhub
        required: true
      GH_PAT:
        description: "GITHUB Token for accessing private stol github repositories" 
        required: false
      ACCESS_ID:
        description: "Access ID for accessing astuff s3 apt repository"
        required: false
      SECRET_KEY:
        description: "Secret Key for accessing astuff s3 apt repository"
        required: false
    inputs:
      context:
        description: "Build's context is the set of files located in the specified PATH or URL (default .)"
        type: "string"
        default: .
      file:
        description: "Optional: Path to Dockerfile"
        type: "string"
        required: false
      image_name:
        description: "Optional: Custom image name to be used, defaults to branch name if not provided"
        type: "string"
        required: false
      tag_name_suffix:
        description: "Optional: Custom docker image tag name suffix to be appended (applies to both base image and output image unless remove_suffix is used), defaults to empty string"
        type: "string"
        required: false
      replace_suffix:
        description: "Optional: True if last part of the docker_tag needs to be replaced with given tag_name_suffix (applies to both base image and output image unless remove_suffix is used)"
        type: "boolean"
        required: false
      remove_suffix:
        description: "Optional: True if suffix should be removed from the docker_tag (e.g., 'develop-humble' becomes 'develop')"
        type: "boolean"
        required: false
      runner:
        description: "GitHub runner for workflow (Default: ubuntu-latest-16-cores)"
        type: "string"
        default: "ubuntu-latest-16-cores"

jobs:
  docker:
    runs-on: ${{ inputs.runner }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Check Git event trigger
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
              core.setFailed('dockerhub workflow only intended for branch commit pushes and git tag pushes!')

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine Docker organization and tag
        id: docker-org-and-tag
        uses: usdot-fhwa-stol/actions/docker-org-and-tag@main
        with:
          docker_tag_suffix: ${{inputs.tag_name_suffix}}
          replace_suffix: ${{inputs.replace_suffix}}
      - name: Determine base branch
        id: determine-base-branch
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            echo git_branch="$GITHUB_BASE_REF" >> $GITHUB_OUTPUT
          else
            echo git_branch="$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
          fi
      - name: Determine Build Metadata
        id: build-metadata
        uses: usdot-fhwa-stol/actions/docker-build-metadata@main
        
      - name: Process Suffix in Output Docker Image tag (handle remove_suffix)
        id: process-suffix-in-output-docker-tag
        if: ${{ inputs.remove_suffix == true }}
        run: |
          # Extract the tag from the original output
          ORIGINAL_TAG="${{ steps.docker-org-and-tag.outputs.docker_image_tag }}"
          echo "Original tag: $ORIGINAL_TAG"
          
          # Remove everything after the last dash (if a dash exists)
          if [[ "$ORIGINAL_TAG" == *-* ]]; then
            # Extract the part before the last dash (removes suffix after last dash)
            BASE_TAG="${ORIGINAL_TAG%-*}"
            REMOVED_SUFFIX="${ORIGINAL_TAG##*-}"
            echo "Removed suffix: -$REMOVED_SUFFIX from tag"
            echo "Docker image output tag after suffix removal: $BASE_TAG"
            echo "processed_tag=$BASE_TAG" >> $GITHUB_OUTPUT
          else
            # If no dash exists, keep the original tag
            echo "::warning::No suffix to remove - tag doesn't contain a dash where it was expected"
            echo "::warning::Keeping original tag: $ORIGINAL_TAG"
            echo "processed_tag=$ORIGINAL_TAG" >> $GITHUB_OUTPUT
          fi
                
      - name: Check for conflicting suffix options
        if: ${{ inputs.remove_suffix == true && inputs.replace_suffix == true }}
        run: |
          echo "::warning::Both replace_suffix and remove_suffix are enabled. remove_suffix will override replace_suffix and remove the suffix entirely."

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.docker-org-and-tag.outputs.docker_organization }}/${{ inputs.image_name || github.event.repository.name }}:${{ inputs.remove_suffix == true && steps.process-suffix-in-output-docker-tag.outputs.processed_tag || steps.docker-org-and-tag.outputs.docker_image_tag }}
          build-args: |
            BUILD_DATE=${{ steps.build-metadata.outputs.build_date }}
            VCS_REF=${{ steps.build-metadata.outputs.vcs_ref }}
            VERSION=${{ steps.build-metadata.outputs.version }}
            TOKEN=${{ secrets.GH_PAT }}
            DOCKER_ORG=${{ steps.docker-org-and-tag.outputs.docker_organization }}
            DOCKER_TAG=${{ steps.docker-org-and-tag.outputs.docker_image_tag }}
            GIT_BRANCH=${{ steps.determine-base-branch.outputs.git_branch }}
            ACCESS_ID=${{ secrets.ACCESS_ID }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
